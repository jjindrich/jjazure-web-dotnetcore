name: jjwebapicore

trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    -  src-webapi/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: CompileAndCheck
    displayName: Compile and check code
    steps:      
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: 'src-webapi/jjwebapicore/**/*.csproj'
        arguments: '--configuration Release'
        workingDirectory: 'src-webapi/jjwebapicore'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test and code coverage'
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
        workingDirectory: 'src-webapi/jjwebapicore'
    - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
      displayName: ReportGenerator
      inputs:
        reports: '**/coverage.cobertura.xml'
        sourcedirs: 'src-webapi/jjwebapicoreTests'
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage from **/coverage.cobertura.xml'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '**/coverage.cobertura.xml'
        pathToSources: 'src-webapi/jjwebapicore'
        reportDirectory: CoverageReport

  - job: Publish
    steps:
      - bash: ACR

- stage: DeployTEST
  displayName: Deploy to TEST
  jobs:
  - deployment: DeployWeb
    displayName: deploy Web
    pool:
      vmImage: 'Ubuntu-latest'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo Hello world
  - job: B1
    steps:
    - bash: echo "B1"
      displayName: B1 popis
  - job: B2
    steps:
    - bash: echo "B2"
