name: WebWindows dotnet
# Requirements: 
#   Azure User Managed Identity with Federated credentials for GH Actions
#   Permissions: Contributor scope Resource group
#   GitHub repository secrets
#   GitHub environment secrets

on:
  workflow_dispatch:
    
  push:
    branches: 
    - master
    paths:
    - 'src-web-windows/**'

  pull_request:
    branches: 
    - master
    paths:
    - 'src-web-windows/**'

permissions:
      id-token: write
      contents: read   

jobs:

  build:
    name: 'Build and Test'
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
        working-directory: src-web-windows

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    # TODO: Code coverage
    # https://github.com/marketplace/actions/code-coverage-summary

    # TODO: Generate Build Number
    # https://github.com/marketplace/actions/build-number-generator

  publish:
    name: 'Publish to ACR'
    runs-on: ubuntu-latest
    environment: dev    
    env:
      ACR_NAME: 'jjakscontainers'
    defaults:
      run:
        shell: bash
        working-directory: src-web-windows
    if: (github.ref == 'refs/heads/master' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: OIDC Login to Azure Public Cloud (using Azure User Managed Identity)
      uses: Azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
    
    - name: Push image
      run: |
        az acr login --name ${{ secrets.ACR_NAME }}
        az acr build --registry ${{ secrets.ACR_NAME }} --image ${{ secrets.ACR_NAME }}.azurecr.io/jjwebcorewindows:${{ github.sha }} --file ./jjwebcorewindows/Dockerfile --platform windows .

  deploy:
    name: 'Deploy to AKS'
    runs-on: ubuntu-latest
    environment: dev    
    defaults:
      run:
        shell: bash
        working-directory: src-web-windows
    needs: publish

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: OIDC Login to Azure Public Cloud (using Azure User Managed Identity)
      uses: Azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  

    - uses: Azure/get-keyvault-secrets@v1
      with: 
        keyvault: ${{ secrets.AKV_NAME }}
        secrets: 'appInsightsKey'
      id: kv

    - uses: Azure/aks-set-context@v3
      with:
        cluster-name: ${{ secrets.AKS_NAME }}
        resource-group: ${{ secrets.AKS_RG }}
        admin: true

    # !!! not reflecting default working-directory
    - uses: azure/k8s-bake@v1
      with:
        renderEngine: 'helm'
        helmChart: './src-web-windows/jjwebcorewindows/charts/jjwebcorewindows'
        overrideFiles: './src-web-windows/jjwebcorewindows/charts/jjwebcorewindows/values.yaml'
        overrides: |     
          image.repository:${{ secrets.ACR_NAME }}.azurecr.io/jjwebcorewindows
          image.tag:${{ github.sha }}
          secrets.APPINSIGHTS.INSTRUMENTATIONKEY:${{ steps.kv.outputs.appInsightsKey }}
        helm-version: 'latest'
        silent: 'false'
      id: bake

    - uses: Azure/k8s-deploy@v1
      with:
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        namespace: 'jjapi'
