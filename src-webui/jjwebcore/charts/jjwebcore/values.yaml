# Default values for jjwebcore.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
fullnameOverride: jjwebcore
replicaCount: 2
image:
  repository: jjwebcore
  tag: stable
  pullPolicy: IfNotPresent
imagePullSecrets: []
  # Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  # ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  #
  # This uses credentials from secret "myRegistryKeySecretName".
  # - name: myRegistryKeySecretName
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "jjweb"
service:
  type: ClusterIP
  port: 80

service2:
  type: LoadBalancer
  port: 80
  annotations:
    service.beta.kubernetes.io/azure-dns-label-name: jjaks-lb
    service.beta.kubernetes.io/azure-load-balancer-ipv4: 10.4.2.251
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    service.beta.kubernetes.io/azure-pls-create: "true"
    service.beta.kubernetes.io/azure-pls-name: jjweb-pls

probes:
  enabled: false

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
#    nginx.ingress.kubernetes.io/configuration-snippet: |
#      proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: "/"
  path: /
  hosts:
    - jjazgwaks.germanywestcentral.cloudapp.azure.com
  tls: 
    - secretName: jjwebcore-cert
      hosts:
        - jjazgwaks.germanywestcentral.cloudapp.azure.com
ingress2:
  enabled: true
  className: "nginx-internal"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/rewrite-target: "/"
  path: /
  # hosts:
  #   - chart-example.local
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
secrets:
  # Optionally specify a set of secret objects whose values
  # will be injected as environment variables by default.
  # You should add this section to a file like secrets.yaml
  # that is explicitly NOT committed to source code control
  # and then include it as part of your helm install step.
  # ref: https://kubernetes.io/docs/concepts/configuration/secret/
  #
  # This creates a secret "mysecret" and injects "mypassword"
  # as the environment variable mysecret_mypassword=password.
  # mysecret:
  #   mypassword: password
  SERVICEAPIROOT:
    URL: http://jjwebapicore.jjapi.svc.cluster.local
  SERVICEWINAPIROOT:
    URL: http://jjwebcorewindows.jjapi.svc.cluster.local
  APPLICATIONINSIGHTS:
    CONNECTION_STRING: InstrumentationKey=00000000-0000-0000-0000-000000000000
  ConnectionStrings:
    _AppConfig: copy_AppConfig_connectionstring
  AzureOpenAI:
    _Deployment: modelname
    _Endpoint: azureopenaiurl
    _ApiKey: mykey
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
   cpu: 100m
   memory: 256Mi
  requests:
   cpu: 100m
   memory: 256Mi
nodeSelector:
  "kubernetes.io/os": linux

tolerations: []

affinity: {}
